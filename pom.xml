<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>com.example</groupId>
    <artifactId>hello-payara-world</artifactId>
    <version>1.0-SNAPSHOT</version>
    <name>hello</name>
    <packaging>war</packaging>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <maven.compiler.target>11</maven.compiler.target>
        <maven.compiler.source>11</maven.compiler.source>
        <junit-jupiter.version>5.5.0</junit-jupiter.version>
        <payara.version>5.2022.4</payara.version>
        <skip.test.deployment>false</skip.test.deployment>
    </properties>

    <dependencies>
        <dependency>
            <groupId>jakarta.platform</groupId>
            <artifactId>jakarta.jakartaee-web-api</artifactId>
            <version>9.0.0</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>fish.payara.extras</groupId>
            <artifactId>payara-embedded-all</artifactId>
            <version>${payara.version}</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter</artifactId>
            <version>${junit-jupiter.version}</version>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <build>
        <finalName>hello</finalName>
        <testResources>
            <testResource>
                <filtering>true</filtering>
                <directory>src/test/resources</directory>
            </testResource>
        </testResources>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-war-plugin</artifactId>
                <version>3.3.2</version>
            </plugin>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>build-helper-maven-plugin</artifactId>
                <version>3.3.0</version>
                <executions>
                    <execution>
                        <id>reserve-network-port</id>
                        <goals>
                            <goal>reserve-network-port</goal>
                        </goals>
                        <phase>process-sources</phase>
                        <configuration>
                            <portNames>
                                <portName>payara.port</portName>
                            </portNames>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <artifactId>maven-failsafe-plugin</artifactId>
                <version>3.0.0-M7</version>
                <executions>
                    <execution>
                        <goals>
                            <goal>integration-test</goal>
                            <goal>verify</goal>
                        </goals>
                        <configuration>
                            <skip>${skip.test.deployment}</skip>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-resources-plugin</artifactId>
                <version>2.6</version>
                <executions>
                    <execution>
                        <id>pre_deploy_test_environment</id>
                        <phase>pre-integration-test</phase>
                        <goals>
                            <goal>copy-resources</goal>
                        </goals>
                        <configuration>
                            <skip>${skip.test.deployment}</skip>
                            <outputDirectory>${basedir}/target/test-classes/dockerfiles</outputDirectory>
                            <resources>
                                <resource>
                                    <directory>${basedir}/target</directory>
                                    <includes>
                                        <include>hello.war</include>
                                    </includes>
                                </resource>
                            </resources>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>exec-maven-plugin</artifactId>
                <version>1.6.0</version>
                <executions>
                    <execution>
                        <goals>
                            <goal>exec</goal>
                        </goals>
                        <phase>pre-integration-test</phase>
                        <id>pre_deploy_clean_test_environment</id>
                        <configuration>
                            <skip>${skip.test.deployment}</skip>
                            <executable>docker-compose</executable>
                            <arguments>
                                <argument>-f</argument>
                                <argument>target/test-classes/docker-compose.yml</argument>
                                <argument>down</argument>
                                <argument>-v</argument>
                                <argument>--rmi</argument>
                                <argument>local</argument>
                            </arguments>
                            <successCodes>
                                <successCode>0</successCode>
                                <successCode>1</successCode>
                            </successCodes>
                        </configuration>
                    </execution>
                    <execution>
                        <goals>
                            <goal>exec</goal>
                        </goals>
                        <phase>pre-integration-test</phase>
                        <id>deploy_test_environment</id>
                        <configuration>
                            <skip>${skip.test.deployment}</skip>
                            <executable>docker-compose</executable>
                            <arguments>
                                <argument>-f</argument>
                                <argument>target/test-classes/docker-compose.yml</argument>
                                <argument>up</argument>
                                <argument>-d</argument>
                            </arguments>
                        </configuration>
                    </execution>
                    <execution>
                        <goals>
                            <goal>exec</goal>
                        </goals>
                        <phase>post-integration-test</phase>
                        <id>post_undeploy_test_environment</id>
                        <configuration>
                            <skip>${skip.test.deplyment}</skip>
                            <executable>docker-compose</executable>
                            <arguments>
                                <argument>-f</argument>
                                <argument>target/test-classes/docker-compose.yml</argument>
                                <argument>down</argument>
                                <argument>-v</argument>
                                <argument>--rmi</argument>
                                <argument>local</argument>
                            </arguments>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>
</project>
